// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v5.27.1
// source: protos/subscribtion.proto

package booking

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SubscriptionPersonal struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	GymId       string `protobuf:"bytes,2,opt,name=gym_id,json=gymId,proto3" json:"gym_id,omitempty"`
	Type        string `protobuf:"bytes,3,opt,name=type,proto3" json:"type,omitempty"`
	Description string `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	Price       int32  `protobuf:"varint,5,opt,name=price,proto3" json:"price,omitempty"`
	Duration    int32  `protobuf:"varint,6,opt,name=duration,proto3" json:"duration,omitempty"`
	Count       int32  `protobuf:"varint,7,opt,name=count,proto3" json:"count,omitempty"`
	CreatedAt   string `protobuf:"bytes,8,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt   string `protobuf:"bytes,9,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	DeletedAt   int64  `protobuf:"varint,10,opt,name=deleted_at,json=deletedAt,proto3" json:"deleted_at,omitempty"`
}

func (x *SubscriptionPersonal) Reset() {
	*x = SubscriptionPersonal{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_subscribtion_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubscriptionPersonal) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscriptionPersonal) ProtoMessage() {}

func (x *SubscriptionPersonal) ProtoReflect() protoreflect.Message {
	mi := &file_protos_subscribtion_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscriptionPersonal.ProtoReflect.Descriptor instead.
func (*SubscriptionPersonal) Descriptor() ([]byte, []int) {
	return file_protos_subscribtion_proto_rawDescGZIP(), []int{0}
}

func (x *SubscriptionPersonal) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *SubscriptionPersonal) GetGymId() string {
	if x != nil {
		return x.GymId
	}
	return ""
}

func (x *SubscriptionPersonal) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *SubscriptionPersonal) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *SubscriptionPersonal) GetPrice() int32 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *SubscriptionPersonal) GetDuration() int32 {
	if x != nil {
		return x.Duration
	}
	return 0
}

func (x *SubscriptionPersonal) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *SubscriptionPersonal) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *SubscriptionPersonal) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

func (x *SubscriptionPersonal) GetDeletedAt() int64 {
	if x != nil {
		return x.DeletedAt
	}
	return 0
}

type SubscriptionGroup struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	GymId       string `protobuf:"bytes,2,opt,name=gym_id,json=gymId,proto3" json:"gym_id,omitempty"`
	CoachId     string `protobuf:"bytes,3,opt,name=coach_id,json=coachId,proto3" json:"coach_id,omitempty"`
	Type        string `protobuf:"bytes,4,opt,name=type,proto3" json:"type,omitempty"`
	Description string `protobuf:"bytes,5,opt,name=description,proto3" json:"description,omitempty"`
	Price       int32  `protobuf:"varint,6,opt,name=price,proto3" json:"price,omitempty"`
	Capacity    int32  `protobuf:"varint,7,opt,name=capacity,proto3" json:"capacity,omitempty"`
	Time        string `protobuf:"bytes,8,opt,name=time,proto3" json:"time,omitempty"`
	Duration    int32  `protobuf:"varint,9,opt,name=duration,proto3" json:"duration,omitempty"`
	Count       int32  `protobuf:"varint,10,opt,name=count,proto3" json:"count,omitempty"`
	CreatedAt   string `protobuf:"bytes,11,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt   string `protobuf:"bytes,12,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	DeletedAt   int64  `protobuf:"varint,13,opt,name=deleted_at,json=deletedAt,proto3" json:"deleted_at,omitempty"`
}

func (x *SubscriptionGroup) Reset() {
	*x = SubscriptionGroup{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_subscribtion_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubscriptionGroup) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscriptionGroup) ProtoMessage() {}

func (x *SubscriptionGroup) ProtoReflect() protoreflect.Message {
	mi := &file_protos_subscribtion_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscriptionGroup.ProtoReflect.Descriptor instead.
func (*SubscriptionGroup) Descriptor() ([]byte, []int) {
	return file_protos_subscribtion_proto_rawDescGZIP(), []int{1}
}

func (x *SubscriptionGroup) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *SubscriptionGroup) GetGymId() string {
	if x != nil {
		return x.GymId
	}
	return ""
}

func (x *SubscriptionGroup) GetCoachId() string {
	if x != nil {
		return x.CoachId
	}
	return ""
}

func (x *SubscriptionGroup) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *SubscriptionGroup) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *SubscriptionGroup) GetPrice() int32 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *SubscriptionGroup) GetCapacity() int32 {
	if x != nil {
		return x.Capacity
	}
	return 0
}

func (x *SubscriptionGroup) GetTime() string {
	if x != nil {
		return x.Time
	}
	return ""
}

func (x *SubscriptionGroup) GetDuration() int32 {
	if x != nil {
		return x.Duration
	}
	return 0
}

func (x *SubscriptionGroup) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *SubscriptionGroup) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *SubscriptionGroup) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

func (x *SubscriptionGroup) GetDeletedAt() int64 {
	if x != nil {
		return x.DeletedAt
	}
	return 0
}

type SubscriptionCoach struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	GymId       string `protobuf:"bytes,2,opt,name=gym_id,json=gymId,proto3" json:"gym_id,omitempty"`
	CoachId     string `protobuf:"bytes,3,opt,name=coach_id,json=coachId,proto3" json:"coach_id,omitempty"`
	Type        string `protobuf:"bytes,4,opt,name=type,proto3" json:"type,omitempty"`
	Description string `protobuf:"bytes,5,opt,name=description,proto3" json:"description,omitempty"`
	Price       int32  `protobuf:"varint,6,opt,name=price,proto3" json:"price,omitempty"`
	Duration    int32  `protobuf:"varint,7,opt,name=duration,proto3" json:"duration,omitempty"`
	CreatedAt   string `protobuf:"bytes,8,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt   string `protobuf:"bytes,9,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	DeletedAt   int64  `protobuf:"varint,10,opt,name=deleted_at,json=deletedAt,proto3" json:"deleted_at,omitempty"`
}

func (x *SubscriptionCoach) Reset() {
	*x = SubscriptionCoach{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_subscribtion_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubscriptionCoach) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscriptionCoach) ProtoMessage() {}

func (x *SubscriptionCoach) ProtoReflect() protoreflect.Message {
	mi := &file_protos_subscribtion_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscriptionCoach.ProtoReflect.Descriptor instead.
func (*SubscriptionCoach) Descriptor() ([]byte, []int) {
	return file_protos_subscribtion_proto_rawDescGZIP(), []int{2}
}

func (x *SubscriptionCoach) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *SubscriptionCoach) GetGymId() string {
	if x != nil {
		return x.GymId
	}
	return ""
}

func (x *SubscriptionCoach) GetCoachId() string {
	if x != nil {
		return x.CoachId
	}
	return ""
}

func (x *SubscriptionCoach) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *SubscriptionCoach) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *SubscriptionCoach) GetPrice() int32 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *SubscriptionCoach) GetDuration() int32 {
	if x != nil {
		return x.Duration
	}
	return 0
}

func (x *SubscriptionCoach) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *SubscriptionCoach) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

func (x *SubscriptionCoach) GetDeletedAt() int64 {
	if x != nil {
		return x.DeletedAt
	}
	return 0
}

type CreateSubscriptionPersonalRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SubscriptionPersonal *SubscriptionPersonal `protobuf:"bytes,1,opt,name=subscription_personal,json=subscriptionPersonal,proto3" json:"subscription_personal,omitempty"`
}

func (x *CreateSubscriptionPersonalRequest) Reset() {
	*x = CreateSubscriptionPersonalRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_subscribtion_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateSubscriptionPersonalRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateSubscriptionPersonalRequest) ProtoMessage() {}

func (x *CreateSubscriptionPersonalRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protos_subscribtion_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateSubscriptionPersonalRequest.ProtoReflect.Descriptor instead.
func (*CreateSubscriptionPersonalRequest) Descriptor() ([]byte, []int) {
	return file_protos_subscribtion_proto_rawDescGZIP(), []int{3}
}

func (x *CreateSubscriptionPersonalRequest) GetSubscriptionPersonal() *SubscriptionPersonal {
	if x != nil {
		return x.SubscriptionPersonal
	}
	return nil
}

type GetSubscriptionPersonalRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetSubscriptionPersonalRequest) Reset() {
	*x = GetSubscriptionPersonalRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_subscribtion_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSubscriptionPersonalRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSubscriptionPersonalRequest) ProtoMessage() {}

func (x *GetSubscriptionPersonalRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protos_subscribtion_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSubscriptionPersonalRequest.ProtoReflect.Descriptor instead.
func (*GetSubscriptionPersonalRequest) Descriptor() ([]byte, []int) {
	return file_protos_subscribtion_proto_rawDescGZIP(), []int{4}
}

func (x *GetSubscriptionPersonalRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type UpdateSubscriptionPersonalRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SubscriptionPersonal *SubscriptionPersonal `protobuf:"bytes,1,opt,name=subscription_personal,json=subscriptionPersonal,proto3" json:"subscription_personal,omitempty"`
}

func (x *UpdateSubscriptionPersonalRequest) Reset() {
	*x = UpdateSubscriptionPersonalRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_subscribtion_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateSubscriptionPersonalRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateSubscriptionPersonalRequest) ProtoMessage() {}

func (x *UpdateSubscriptionPersonalRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protos_subscribtion_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateSubscriptionPersonalRequest.ProtoReflect.Descriptor instead.
func (*UpdateSubscriptionPersonalRequest) Descriptor() ([]byte, []int) {
	return file_protos_subscribtion_proto_rawDescGZIP(), []int{5}
}

func (x *UpdateSubscriptionPersonalRequest) GetSubscriptionPersonal() *SubscriptionPersonal {
	if x != nil {
		return x.SubscriptionPersonal
	}
	return nil
}

type DeleteSubscriptionPersonalRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeleteSubscriptionPersonalRequest) Reset() {
	*x = DeleteSubscriptionPersonalRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_subscribtion_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteSubscriptionPersonalRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteSubscriptionPersonalRequest) ProtoMessage() {}

func (x *DeleteSubscriptionPersonalRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protos_subscribtion_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteSubscriptionPersonalRequest.ProtoReflect.Descriptor instead.
func (*DeleteSubscriptionPersonalRequest) Descriptor() ([]byte, []int) {
	return file_protos_subscribtion_proto_rawDescGZIP(), []int{6}
}

func (x *DeleteSubscriptionPersonalRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type ListSubscriptionPersonalRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GymId string `protobuf:"bytes,1,opt,name=gym_id,json=gymId,proto3" json:"gym_id,omitempty"`
}

func (x *ListSubscriptionPersonalRequest) Reset() {
	*x = ListSubscriptionPersonalRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_subscribtion_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListSubscriptionPersonalRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListSubscriptionPersonalRequest) ProtoMessage() {}

func (x *ListSubscriptionPersonalRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protos_subscribtion_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListSubscriptionPersonalRequest.ProtoReflect.Descriptor instead.
func (*ListSubscriptionPersonalRequest) Descriptor() ([]byte, []int) {
	return file_protos_subscribtion_proto_rawDescGZIP(), []int{7}
}

func (x *ListSubscriptionPersonalRequest) GetGymId() string {
	if x != nil {
		return x.GymId
	}
	return ""
}

type ListSubscriptionPersonalResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SubscriptionPersonal []*SubscriptionPersonal `protobuf:"bytes,1,rep,name=subscription_personal,json=subscriptionPersonal,proto3" json:"subscription_personal,omitempty"`
}

func (x *ListSubscriptionPersonalResponse) Reset() {
	*x = ListSubscriptionPersonalResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_subscribtion_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListSubscriptionPersonalResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListSubscriptionPersonalResponse) ProtoMessage() {}

func (x *ListSubscriptionPersonalResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protos_subscribtion_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListSubscriptionPersonalResponse.ProtoReflect.Descriptor instead.
func (*ListSubscriptionPersonalResponse) Descriptor() ([]byte, []int) {
	return file_protos_subscribtion_proto_rawDescGZIP(), []int{8}
}

func (x *ListSubscriptionPersonalResponse) GetSubscriptionPersonal() []*SubscriptionPersonal {
	if x != nil {
		return x.SubscriptionPersonal
	}
	return nil
}

type CreateSubscriptionGroupRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SubscriptionGroup *SubscriptionGroup `protobuf:"bytes,1,opt,name=subscription_group,json=subscriptionGroup,proto3" json:"subscription_group,omitempty"`
}

func (x *CreateSubscriptionGroupRequest) Reset() {
	*x = CreateSubscriptionGroupRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_subscribtion_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateSubscriptionGroupRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateSubscriptionGroupRequest) ProtoMessage() {}

func (x *CreateSubscriptionGroupRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protos_subscribtion_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateSubscriptionGroupRequest.ProtoReflect.Descriptor instead.
func (*CreateSubscriptionGroupRequest) Descriptor() ([]byte, []int) {
	return file_protos_subscribtion_proto_rawDescGZIP(), []int{9}
}

func (x *CreateSubscriptionGroupRequest) GetSubscriptionGroup() *SubscriptionGroup {
	if x != nil {
		return x.SubscriptionGroup
	}
	return nil
}

type GetSubscriptionGroupRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetSubscriptionGroupRequest) Reset() {
	*x = GetSubscriptionGroupRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_subscribtion_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSubscriptionGroupRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSubscriptionGroupRequest) ProtoMessage() {}

func (x *GetSubscriptionGroupRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protos_subscribtion_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSubscriptionGroupRequest.ProtoReflect.Descriptor instead.
func (*GetSubscriptionGroupRequest) Descriptor() ([]byte, []int) {
	return file_protos_subscribtion_proto_rawDescGZIP(), []int{10}
}

func (x *GetSubscriptionGroupRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type UpdateSubscriptionGroupRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SubscriptionGroup *SubscriptionGroup `protobuf:"bytes,1,opt,name=subscription_group,json=subscriptionGroup,proto3" json:"subscription_group,omitempty"`
}

func (x *UpdateSubscriptionGroupRequest) Reset() {
	*x = UpdateSubscriptionGroupRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_subscribtion_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateSubscriptionGroupRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateSubscriptionGroupRequest) ProtoMessage() {}

func (x *UpdateSubscriptionGroupRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protos_subscribtion_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateSubscriptionGroupRequest.ProtoReflect.Descriptor instead.
func (*UpdateSubscriptionGroupRequest) Descriptor() ([]byte, []int) {
	return file_protos_subscribtion_proto_rawDescGZIP(), []int{11}
}

func (x *UpdateSubscriptionGroupRequest) GetSubscriptionGroup() *SubscriptionGroup {
	if x != nil {
		return x.SubscriptionGroup
	}
	return nil
}

type DeleteSubscriptionGroupRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeleteSubscriptionGroupRequest) Reset() {
	*x = DeleteSubscriptionGroupRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_subscribtion_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteSubscriptionGroupRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteSubscriptionGroupRequest) ProtoMessage() {}

func (x *DeleteSubscriptionGroupRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protos_subscribtion_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteSubscriptionGroupRequest.ProtoReflect.Descriptor instead.
func (*DeleteSubscriptionGroupRequest) Descriptor() ([]byte, []int) {
	return file_protos_subscribtion_proto_rawDescGZIP(), []int{12}
}

func (x *DeleteSubscriptionGroupRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type ListSubscriptionGroupRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GymId string `protobuf:"bytes,1,opt,name=gym_id,json=gymId,proto3" json:"gym_id,omitempty"`
}

func (x *ListSubscriptionGroupRequest) Reset() {
	*x = ListSubscriptionGroupRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_subscribtion_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListSubscriptionGroupRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListSubscriptionGroupRequest) ProtoMessage() {}

func (x *ListSubscriptionGroupRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protos_subscribtion_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListSubscriptionGroupRequest.ProtoReflect.Descriptor instead.
func (*ListSubscriptionGroupRequest) Descriptor() ([]byte, []int) {
	return file_protos_subscribtion_proto_rawDescGZIP(), []int{13}
}

func (x *ListSubscriptionGroupRequest) GetGymId() string {
	if x != nil {
		return x.GymId
	}
	return ""
}

type ListSubscriptionGroupResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SubscriptionGroup []*SubscriptionGroup `protobuf:"bytes,1,rep,name=subscription_group,json=subscriptionGroup,proto3" json:"subscription_group,omitempty"`
}

func (x *ListSubscriptionGroupResponse) Reset() {
	*x = ListSubscriptionGroupResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_subscribtion_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListSubscriptionGroupResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListSubscriptionGroupResponse) ProtoMessage() {}

func (x *ListSubscriptionGroupResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protos_subscribtion_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListSubscriptionGroupResponse.ProtoReflect.Descriptor instead.
func (*ListSubscriptionGroupResponse) Descriptor() ([]byte, []int) {
	return file_protos_subscribtion_proto_rawDescGZIP(), []int{14}
}

func (x *ListSubscriptionGroupResponse) GetSubscriptionGroup() []*SubscriptionGroup {
	if x != nil {
		return x.SubscriptionGroup
	}
	return nil
}

type CreateSubscriptionCoachRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SubscriptionCoach *SubscriptionCoach `protobuf:"bytes,1,opt,name=subscription_coach,json=subscriptionCoach,proto3" json:"subscription_coach,omitempty"`
}

func (x *CreateSubscriptionCoachRequest) Reset() {
	*x = CreateSubscriptionCoachRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_subscribtion_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateSubscriptionCoachRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateSubscriptionCoachRequest) ProtoMessage() {}

func (x *CreateSubscriptionCoachRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protos_subscribtion_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateSubscriptionCoachRequest.ProtoReflect.Descriptor instead.
func (*CreateSubscriptionCoachRequest) Descriptor() ([]byte, []int) {
	return file_protos_subscribtion_proto_rawDescGZIP(), []int{15}
}

func (x *CreateSubscriptionCoachRequest) GetSubscriptionCoach() *SubscriptionCoach {
	if x != nil {
		return x.SubscriptionCoach
	}
	return nil
}

type GetSubscriptionCoachRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetSubscriptionCoachRequest) Reset() {
	*x = GetSubscriptionCoachRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_subscribtion_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSubscriptionCoachRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSubscriptionCoachRequest) ProtoMessage() {}

func (x *GetSubscriptionCoachRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protos_subscribtion_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSubscriptionCoachRequest.ProtoReflect.Descriptor instead.
func (*GetSubscriptionCoachRequest) Descriptor() ([]byte, []int) {
	return file_protos_subscribtion_proto_rawDescGZIP(), []int{16}
}

func (x *GetSubscriptionCoachRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type UpdateSubscriptionCoachRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SubscriptionCoach *SubscriptionCoach `protobuf:"bytes,1,opt,name=subscription_coach,json=subscriptionCoach,proto3" json:"subscription_coach,omitempty"`
}

func (x *UpdateSubscriptionCoachRequest) Reset() {
	*x = UpdateSubscriptionCoachRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_subscribtion_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateSubscriptionCoachRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateSubscriptionCoachRequest) ProtoMessage() {}

func (x *UpdateSubscriptionCoachRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protos_subscribtion_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateSubscriptionCoachRequest.ProtoReflect.Descriptor instead.
func (*UpdateSubscriptionCoachRequest) Descriptor() ([]byte, []int) {
	return file_protos_subscribtion_proto_rawDescGZIP(), []int{17}
}

func (x *UpdateSubscriptionCoachRequest) GetSubscriptionCoach() *SubscriptionCoach {
	if x != nil {
		return x.SubscriptionCoach
	}
	return nil
}

type DeleteSubscriptionCoachRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeleteSubscriptionCoachRequest) Reset() {
	*x = DeleteSubscriptionCoachRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_subscribtion_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteSubscriptionCoachRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteSubscriptionCoachRequest) ProtoMessage() {}

func (x *DeleteSubscriptionCoachRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protos_subscribtion_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteSubscriptionCoachRequest.ProtoReflect.Descriptor instead.
func (*DeleteSubscriptionCoachRequest) Descriptor() ([]byte, []int) {
	return file_protos_subscribtion_proto_rawDescGZIP(), []int{18}
}

func (x *DeleteSubscriptionCoachRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type ListSubscriptionCoachRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GymId string `protobuf:"bytes,1,opt,name=gym_id,json=gymId,proto3" json:"gym_id,omitempty"`
}

func (x *ListSubscriptionCoachRequest) Reset() {
	*x = ListSubscriptionCoachRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_subscribtion_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListSubscriptionCoachRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListSubscriptionCoachRequest) ProtoMessage() {}

func (x *ListSubscriptionCoachRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protos_subscribtion_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListSubscriptionCoachRequest.ProtoReflect.Descriptor instead.
func (*ListSubscriptionCoachRequest) Descriptor() ([]byte, []int) {
	return file_protos_subscribtion_proto_rawDescGZIP(), []int{19}
}

func (x *ListSubscriptionCoachRequest) GetGymId() string {
	if x != nil {
		return x.GymId
	}
	return ""
}

type ListSubscriptionCoachResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SubscriptionCoach []*SubscriptionCoach `protobuf:"bytes,1,rep,name=subscription_coach,json=subscriptionCoach,proto3" json:"subscription_coach,omitempty"`
}

func (x *ListSubscriptionCoachResponse) Reset() {
	*x = ListSubscriptionCoachResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_subscribtion_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListSubscriptionCoachResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListSubscriptionCoachResponse) ProtoMessage() {}

func (x *ListSubscriptionCoachResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protos_subscribtion_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListSubscriptionCoachResponse.ProtoReflect.Descriptor instead.
func (*ListSubscriptionCoachResponse) Descriptor() ([]byte, []int) {
	return file_protos_subscribtion_proto_rawDescGZIP(), []int{20}
}

func (x *ListSubscriptionCoachResponse) GetSubscriptionCoach() []*SubscriptionCoach {
	if x != nil {
		return x.SubscriptionCoach
	}
	return nil
}

var File_protos_subscribtion_proto protoreflect.FileDescriptor

var file_protos_subscribtion_proto_rawDesc = []byte{
	0x0a, 0x19, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2f, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69,
	0x62, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x03, 0x67, 0x79, 0x6d,
	0x1a, 0x14, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2f, 0x62, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x98, 0x02, 0x0a, 0x14, 0x53, 0x75, 0x62, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x15, 0x0a, 0x06, 0x67, 0x79, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x67, 0x79, 0x6d, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05,
	0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x70, 0x72, 0x69,
	0x63, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x14,
	0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f,
	0x61, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61,
	0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64,
	0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x41,
	0x74, 0x22, 0xe0, 0x02, 0x0a, 0x11, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x15, 0x0a, 0x06, 0x67, 0x79, 0x6d, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x67, 0x79, 0x6d, 0x49, 0x64, 0x12, 0x19,
	0x0a, 0x08, 0x63, 0x6f, 0x61, 0x63, 0x68, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x63, 0x6f, 0x61, 0x63, 0x68, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x20, 0x0a,
	0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x14, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05,
	0x70, 0x72, 0x69, 0x63, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x61, 0x70, 0x61, 0x63, 0x69, 0x74,
	0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x63, 0x61, 0x70, 0x61, 0x63, 0x69, 0x74,
	0x79, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x64, 0x5f, 0x61, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64,
	0x5f, 0x61, 0x74, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x64, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x64, 0x41, 0x74, 0x22, 0x9a, 0x02, 0x0a, 0x11, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x61, 0x63, 0x68, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x15, 0x0a, 0x06, 0x67, 0x79,
	0x6d, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x67, 0x79, 0x6d, 0x49,
	0x64, 0x12, 0x19, 0x0a, 0x08, 0x63, 0x6f, 0x61, 0x63, 0x68, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x61, 0x63, 0x68, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x75, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x64, 0x75, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f,
	0x61, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61,
	0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64,
	0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x41,
	0x74, 0x22, 0x73, 0x0a, 0x21, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x75, 0x62, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x4e, 0x0a, 0x15, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x79, 0x6d, 0x2e, 0x53, 0x75, 0x62, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c,
	0x52, 0x14, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x65,
	0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x22, 0x30, 0x0a, 0x1e, 0x47, 0x65, 0x74, 0x53, 0x75, 0x62,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61,
	0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x73, 0x0a, 0x21, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x65,
	0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x4e, 0x0a,
	0x15, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x70, 0x65,
	0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67,
	0x79, 0x6d, 0x2e, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x50,
	0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x52, 0x14, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x22, 0x33, 0x0a,
	0x21, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x69, 0x64, 0x22, 0x38, 0x0a, 0x1f, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x15, 0x0a, 0x06, 0x67, 0x79, 0x6d, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x67, 0x79, 0x6d, 0x49, 0x64, 0x22, 0x72, 0x0a, 0x20,
	0x4c, 0x69, 0x73, 0x74, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x4e, 0x0a, 0x15, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x19, 0x2e, 0x67, 0x79, 0x6d, 0x2e, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x52, 0x14, 0x73, 0x75, 0x62, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c,
	0x22, 0x67, 0x0a, 0x1e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x45, 0x0a, 0x12, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16,
	0x2e, 0x67, 0x79, 0x6d, 0x2e, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x11, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x22, 0x2d, 0x0a, 0x1b, 0x47, 0x65, 0x74,
	0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x67, 0x0a, 0x1e, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x45, 0x0a, 0x12, 0x73, 0x75,
	0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x67, 0x79, 0x6d, 0x2e, 0x53, 0x75, 0x62,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x11,
	0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x22, 0x30, 0x0a, 0x1e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x75, 0x62, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x69, 0x64, 0x22, 0x35, 0x0a, 0x1c, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x75, 0x62, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x15, 0x0a, 0x06, 0x67, 0x79, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x67, 0x79, 0x6d, 0x49, 0x64, 0x22, 0x66, 0x0a, 0x1d, 0x4c, 0x69,
	0x73, 0x74, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x45, 0x0a, 0x12, 0x73,
	0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x67, 0x72, 0x6f, 0x75,
	0x70, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x67, 0x79, 0x6d, 0x2e, 0x53, 0x75,
	0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52,
	0x11, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x22, 0x67, 0x0a, 0x1e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x75, 0x62, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x61, 0x63, 0x68, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x45, 0x0a, 0x12, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x63, 0x6f, 0x61, 0x63, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x16, 0x2e, 0x67, 0x79, 0x6d, 0x2e, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x61, 0x63, 0x68, 0x52, 0x11, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x61, 0x63, 0x68, 0x22, 0x2d, 0x0a, 0x1b, 0x47,
	0x65, 0x74, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f,
	0x61, 0x63, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x67, 0x0a, 0x1e, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x43, 0x6f, 0x61, 0x63, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x45, 0x0a, 0x12,
	0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x63, 0x6f, 0x61,
	0x63, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x67, 0x79, 0x6d, 0x2e, 0x53,
	0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x61, 0x63, 0x68,
	0x52, 0x11, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f,
	0x61, 0x63, 0x68, 0x22, 0x30, 0x0a, 0x1e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x75, 0x62,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x61, 0x63, 0x68, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x35, 0x0a, 0x1c, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x75, 0x62,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x61, 0x63, 0x68, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x15, 0x0a, 0x06, 0x67, 0x79, 0x6d, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x67, 0x79, 0x6d, 0x49, 0x64, 0x22, 0x66, 0x0a, 0x1d,
	0x4c, 0x69, 0x73, 0x74, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x43, 0x6f, 0x61, 0x63, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x45, 0x0a,
	0x12, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x63, 0x6f,
	0x61, 0x63, 0x68, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x67, 0x79, 0x6d, 0x2e,
	0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x61, 0x63,
	0x68, 0x52, 0x11, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x43,
	0x6f, 0x61, 0x63, 0x68, 0x32, 0xf5, 0x03, 0x0a, 0x1b, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x12, 0x5f, 0x0a, 0x1a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x75,
	0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e,
	0x61, 0x6c, 0x12, 0x26, 0x2e, 0x67, 0x79, 0x6d, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53,
	0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x65, 0x72, 0x73, 0x6f,
	0x6e, 0x61, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x67, 0x79, 0x6d,
	0x2e, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x65, 0x72,
	0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x12, 0x59, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x53, 0x75, 0x62, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c,
	0x12, 0x23, 0x2e, 0x67, 0x79, 0x6d, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x67, 0x79, 0x6d, 0x2e, 0x53, 0x75, 0x62, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c,
	0x12, 0x5f, 0x0a, 0x1a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x12, 0x26,
	0x2e, 0x67, 0x79, 0x6d, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x75, 0x62, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x67, 0x79, 0x6d, 0x2e, 0x53, 0x75, 0x62,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61,
	0x6c, 0x12, 0x50, 0x0a, 0x1a, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x75, 0x62, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x12,
	0x26, 0x2e, 0x67, 0x79, 0x6d, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x75, 0x62, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0a, 0x2e, 0x67, 0x79, 0x6d, 0x2e, 0x45, 0x6d,
	0x70, 0x74, 0x79, 0x12, 0x67, 0x0a, 0x18, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x75, 0x62, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x12,
	0x24, 0x2e, 0x67, 0x79, 0x6d, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x6c, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x67, 0x79, 0x6d, 0x2e, 0x4c, 0x69, 0x73, 0x74,
	0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x65, 0x72, 0x73,
	0x6f, 0x6e, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x32, 0xc8, 0x03, 0x0a,
	0x18, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x56, 0x0a, 0x17, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x12, 0x23, 0x2e, 0x67, 0x79, 0x6d, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x79, 0x6d, 0x2e,
	0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x12, 0x50, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x20, 0x2e, 0x67, 0x79, 0x6d, 0x2e,
	0x47, 0x65, 0x74, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x79,
	0x6d, 0x2e, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x12, 0x56, 0x0a, 0x17, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x75, 0x62,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x23,
	0x2e, 0x67, 0x79, 0x6d, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x75, 0x62, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x79, 0x6d, 0x2e, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x4a, 0x0a, 0x17, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x23, 0x2e, 0x67, 0x79, 0x6d, 0x2e, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0a, 0x2e, 0x67, 0x79,
	0x6d, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x5e, 0x0a, 0x15, 0x4c, 0x69, 0x73, 0x74, 0x53,
	0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x12, 0x21, 0x2e, 0x67, 0x79, 0x6d, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x75, 0x62, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x67, 0x79, 0x6d, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x75,
	0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x32, 0xc8, 0x03, 0x0a, 0x18, 0x53, 0x75, 0x62, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x61, 0x63, 0x68, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x12, 0x56, 0x0a, 0x17, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x75,
	0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x61, 0x63, 0x68, 0x12,
	0x23, 0x2e, 0x67, 0x79, 0x6d, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x75, 0x62, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x61, 0x63, 0x68, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x79, 0x6d, 0x2e, 0x53, 0x75, 0x62, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x61, 0x63, 0x68, 0x12, 0x50, 0x0a, 0x14,
	0x47, 0x65, 0x74, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x43,
	0x6f, 0x61, 0x63, 0x68, 0x12, 0x20, 0x2e, 0x67, 0x79, 0x6d, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x75,
	0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x61, 0x63, 0x68, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x79, 0x6d, 0x2e, 0x53, 0x75, 0x62,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x61, 0x63, 0x68, 0x12, 0x56,
	0x0a, 0x17, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x61, 0x63, 0x68, 0x12, 0x23, 0x2e, 0x67, 0x79, 0x6d, 0x2e,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x43, 0x6f, 0x61, 0x63, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16,
	0x2e, 0x67, 0x79, 0x6d, 0x2e, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x43, 0x6f, 0x61, 0x63, 0x68, 0x12, 0x4a, 0x0a, 0x17, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x61, 0x63,
	0x68, 0x12, 0x23, 0x2e, 0x67, 0x79, 0x6d, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x75,
	0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x61, 0x63, 0x68, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0a, 0x2e, 0x67, 0x79, 0x6d, 0x2e, 0x45, 0x6d, 0x70,
	0x74, 0x79, 0x12, 0x5e, 0x0a, 0x15, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x61, 0x63, 0x68, 0x12, 0x21, 0x2e, 0x67, 0x79,
	0x6d, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x43, 0x6f, 0x61, 0x63, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22,
	0x2e, 0x67, 0x79, 0x6d, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x61, 0x63, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x42, 0x12, 0x5a, 0x10, 0x67, 0x65, 0x6e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x62,
	0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_protos_subscribtion_proto_rawDescOnce sync.Once
	file_protos_subscribtion_proto_rawDescData = file_protos_subscribtion_proto_rawDesc
)

func file_protos_subscribtion_proto_rawDescGZIP() []byte {
	file_protos_subscribtion_proto_rawDescOnce.Do(func() {
		file_protos_subscribtion_proto_rawDescData = protoimpl.X.CompressGZIP(file_protos_subscribtion_proto_rawDescData)
	})
	return file_protos_subscribtion_proto_rawDescData
}

var file_protos_subscribtion_proto_msgTypes = make([]protoimpl.MessageInfo, 21)
var file_protos_subscribtion_proto_goTypes = []any{
	(*SubscriptionPersonal)(nil),              // 0: gym.SubscriptionPersonal
	(*SubscriptionGroup)(nil),                 // 1: gym.SubscriptionGroup
	(*SubscriptionCoach)(nil),                 // 2: gym.SubscriptionCoach
	(*CreateSubscriptionPersonalRequest)(nil), // 3: gym.CreateSubscriptionPersonalRequest
	(*GetSubscriptionPersonalRequest)(nil),    // 4: gym.GetSubscriptionPersonalRequest
	(*UpdateSubscriptionPersonalRequest)(nil), // 5: gym.UpdateSubscriptionPersonalRequest
	(*DeleteSubscriptionPersonalRequest)(nil), // 6: gym.DeleteSubscriptionPersonalRequest
	(*ListSubscriptionPersonalRequest)(nil),   // 7: gym.ListSubscriptionPersonalRequest
	(*ListSubscriptionPersonalResponse)(nil),  // 8: gym.ListSubscriptionPersonalResponse
	(*CreateSubscriptionGroupRequest)(nil),    // 9: gym.CreateSubscriptionGroupRequest
	(*GetSubscriptionGroupRequest)(nil),       // 10: gym.GetSubscriptionGroupRequest
	(*UpdateSubscriptionGroupRequest)(nil),    // 11: gym.UpdateSubscriptionGroupRequest
	(*DeleteSubscriptionGroupRequest)(nil),    // 12: gym.DeleteSubscriptionGroupRequest
	(*ListSubscriptionGroupRequest)(nil),      // 13: gym.ListSubscriptionGroupRequest
	(*ListSubscriptionGroupResponse)(nil),     // 14: gym.ListSubscriptionGroupResponse
	(*CreateSubscriptionCoachRequest)(nil),    // 15: gym.CreateSubscriptionCoachRequest
	(*GetSubscriptionCoachRequest)(nil),       // 16: gym.GetSubscriptionCoachRequest
	(*UpdateSubscriptionCoachRequest)(nil),    // 17: gym.UpdateSubscriptionCoachRequest
	(*DeleteSubscriptionCoachRequest)(nil),    // 18: gym.DeleteSubscriptionCoachRequest
	(*ListSubscriptionCoachRequest)(nil),      // 19: gym.ListSubscriptionCoachRequest
	(*ListSubscriptionCoachResponse)(nil),     // 20: gym.ListSubscriptionCoachResponse
	(*Empty)(nil),                             // 21: gym.Empty
}
var file_protos_subscribtion_proto_depIdxs = []int32{
	0,  // 0: gym.CreateSubscriptionPersonalRequest.subscription_personal:type_name -> gym.SubscriptionPersonal
	0,  // 1: gym.UpdateSubscriptionPersonalRequest.subscription_personal:type_name -> gym.SubscriptionPersonal
	0,  // 2: gym.ListSubscriptionPersonalResponse.subscription_personal:type_name -> gym.SubscriptionPersonal
	1,  // 3: gym.CreateSubscriptionGroupRequest.subscription_group:type_name -> gym.SubscriptionGroup
	1,  // 4: gym.UpdateSubscriptionGroupRequest.subscription_group:type_name -> gym.SubscriptionGroup
	1,  // 5: gym.ListSubscriptionGroupResponse.subscription_group:type_name -> gym.SubscriptionGroup
	2,  // 6: gym.CreateSubscriptionCoachRequest.subscription_coach:type_name -> gym.SubscriptionCoach
	2,  // 7: gym.UpdateSubscriptionCoachRequest.subscription_coach:type_name -> gym.SubscriptionCoach
	2,  // 8: gym.ListSubscriptionCoachResponse.subscription_coach:type_name -> gym.SubscriptionCoach
	3,  // 9: gym.SubscriptionPersonalService.CreateSubscriptionPersonal:input_type -> gym.CreateSubscriptionPersonalRequest
	4,  // 10: gym.SubscriptionPersonalService.GetSubscriptionPersonal:input_type -> gym.GetSubscriptionPersonalRequest
	5,  // 11: gym.SubscriptionPersonalService.UpdateSubscriptionPersonal:input_type -> gym.UpdateSubscriptionPersonalRequest
	6,  // 12: gym.SubscriptionPersonalService.DeleteSubscriptionPersonal:input_type -> gym.DeleteSubscriptionPersonalRequest
	7,  // 13: gym.SubscriptionPersonalService.ListSubscriptionPersonal:input_type -> gym.ListSubscriptionPersonalRequest
	9,  // 14: gym.SubscriptionGroupService.CreateSubscriptionGroup:input_type -> gym.CreateSubscriptionGroupRequest
	10, // 15: gym.SubscriptionGroupService.GetSubscriptionGroup:input_type -> gym.GetSubscriptionGroupRequest
	11, // 16: gym.SubscriptionGroupService.UpdateSubscriptionGroup:input_type -> gym.UpdateSubscriptionGroupRequest
	12, // 17: gym.SubscriptionGroupService.DeleteSubscriptionGroup:input_type -> gym.DeleteSubscriptionGroupRequest
	13, // 18: gym.SubscriptionGroupService.ListSubscriptionGroup:input_type -> gym.ListSubscriptionGroupRequest
	15, // 19: gym.SubscriptionCoachService.CreateSubscriptionCoach:input_type -> gym.CreateSubscriptionCoachRequest
	16, // 20: gym.SubscriptionCoachService.GetSubscriptionCoach:input_type -> gym.GetSubscriptionCoachRequest
	17, // 21: gym.SubscriptionCoachService.UpdateSubscriptionCoach:input_type -> gym.UpdateSubscriptionCoachRequest
	18, // 22: gym.SubscriptionCoachService.DeleteSubscriptionCoach:input_type -> gym.DeleteSubscriptionCoachRequest
	19, // 23: gym.SubscriptionCoachService.ListSubscriptionCoach:input_type -> gym.ListSubscriptionCoachRequest
	0,  // 24: gym.SubscriptionPersonalService.CreateSubscriptionPersonal:output_type -> gym.SubscriptionPersonal
	0,  // 25: gym.SubscriptionPersonalService.GetSubscriptionPersonal:output_type -> gym.SubscriptionPersonal
	0,  // 26: gym.SubscriptionPersonalService.UpdateSubscriptionPersonal:output_type -> gym.SubscriptionPersonal
	21, // 27: gym.SubscriptionPersonalService.DeleteSubscriptionPersonal:output_type -> gym.Empty
	8,  // 28: gym.SubscriptionPersonalService.ListSubscriptionPersonal:output_type -> gym.ListSubscriptionPersonalResponse
	1,  // 29: gym.SubscriptionGroupService.CreateSubscriptionGroup:output_type -> gym.SubscriptionGroup
	1,  // 30: gym.SubscriptionGroupService.GetSubscriptionGroup:output_type -> gym.SubscriptionGroup
	1,  // 31: gym.SubscriptionGroupService.UpdateSubscriptionGroup:output_type -> gym.SubscriptionGroup
	21, // 32: gym.SubscriptionGroupService.DeleteSubscriptionGroup:output_type -> gym.Empty
	14, // 33: gym.SubscriptionGroupService.ListSubscriptionGroup:output_type -> gym.ListSubscriptionGroupResponse
	2,  // 34: gym.SubscriptionCoachService.CreateSubscriptionCoach:output_type -> gym.SubscriptionCoach
	2,  // 35: gym.SubscriptionCoachService.GetSubscriptionCoach:output_type -> gym.SubscriptionCoach
	2,  // 36: gym.SubscriptionCoachService.UpdateSubscriptionCoach:output_type -> gym.SubscriptionCoach
	21, // 37: gym.SubscriptionCoachService.DeleteSubscriptionCoach:output_type -> gym.Empty
	20, // 38: gym.SubscriptionCoachService.ListSubscriptionCoach:output_type -> gym.ListSubscriptionCoachResponse
	24, // [24:39] is the sub-list for method output_type
	9,  // [9:24] is the sub-list for method input_type
	9,  // [9:9] is the sub-list for extension type_name
	9,  // [9:9] is the sub-list for extension extendee
	0,  // [0:9] is the sub-list for field type_name
}

func init() { file_protos_subscribtion_proto_init() }
func file_protos_subscribtion_proto_init() {
	if File_protos_subscribtion_proto != nil {
		return
	}
	file_protos_booking_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_protos_subscribtion_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*SubscriptionPersonal); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_subscribtion_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*SubscriptionGroup); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_subscribtion_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*SubscriptionCoach); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_subscribtion_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*CreateSubscriptionPersonalRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_subscribtion_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*GetSubscriptionPersonalRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_subscribtion_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*UpdateSubscriptionPersonalRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_subscribtion_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*DeleteSubscriptionPersonalRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_subscribtion_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*ListSubscriptionPersonalRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_subscribtion_proto_msgTypes[8].Exporter = func(v any, i int) any {
			switch v := v.(*ListSubscriptionPersonalResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_subscribtion_proto_msgTypes[9].Exporter = func(v any, i int) any {
			switch v := v.(*CreateSubscriptionGroupRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_subscribtion_proto_msgTypes[10].Exporter = func(v any, i int) any {
			switch v := v.(*GetSubscriptionGroupRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_subscribtion_proto_msgTypes[11].Exporter = func(v any, i int) any {
			switch v := v.(*UpdateSubscriptionGroupRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_subscribtion_proto_msgTypes[12].Exporter = func(v any, i int) any {
			switch v := v.(*DeleteSubscriptionGroupRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_subscribtion_proto_msgTypes[13].Exporter = func(v any, i int) any {
			switch v := v.(*ListSubscriptionGroupRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_subscribtion_proto_msgTypes[14].Exporter = func(v any, i int) any {
			switch v := v.(*ListSubscriptionGroupResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_subscribtion_proto_msgTypes[15].Exporter = func(v any, i int) any {
			switch v := v.(*CreateSubscriptionCoachRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_subscribtion_proto_msgTypes[16].Exporter = func(v any, i int) any {
			switch v := v.(*GetSubscriptionCoachRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_subscribtion_proto_msgTypes[17].Exporter = func(v any, i int) any {
			switch v := v.(*UpdateSubscriptionCoachRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_subscribtion_proto_msgTypes[18].Exporter = func(v any, i int) any {
			switch v := v.(*DeleteSubscriptionCoachRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_subscribtion_proto_msgTypes[19].Exporter = func(v any, i int) any {
			switch v := v.(*ListSubscriptionCoachRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_subscribtion_proto_msgTypes[20].Exporter = func(v any, i int) any {
			switch v := v.(*ListSubscriptionCoachResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_protos_subscribtion_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   21,
			NumExtensions: 0,
			NumServices:   3,
		},
		GoTypes:           file_protos_subscribtion_proto_goTypes,
		DependencyIndexes: file_protos_subscribtion_proto_depIdxs,
		MessageInfos:      file_protos_subscribtion_proto_msgTypes,
	}.Build()
	File_protos_subscribtion_proto = out.File
	file_protos_subscribtion_proto_rawDesc = nil
	file_protos_subscribtion_proto_goTypes = nil
	file_protos_subscribtion_proto_depIdxs = nil
}
